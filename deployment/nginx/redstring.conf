# Redstring UI React - Nginx Configuration

upstream redstring_app {
    server 127.0.0.1:4000;
    keepalive 32;
}

upstream redstring_oauth {
    server 127.0.0.1:3002;
    keepalive 16;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=oauth:10m rate=10r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/m;

server {
    listen 80;
    server_name redstring.io www.redstring.io;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name redstring.io www.redstring.io;
    
    # SSL configuration
    ssl_certificate /path/to/ssl/cert.pem;
    ssl_certificate_key /path/to/ssl/private.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/javascript application/json;
    
    # Main application
    location / {
        proxy_pass http://redstring_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Rate limiting for API endpoints
        location /api/ {
            limit_req zone=api burst=50 nodelay;
            proxy_pass http://redstring_app;
        }
    }
    
    # OAuth endpoints (rate limited)
    location /api/clients/ {
        limit_req zone=oauth burst=5 nodelay;
        
        proxy_pass http://redstring_oauth;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # OAuth-specific timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # Health check endpoints (no rate limiting)
    location = /health {
        proxy_pass http://redstring_app;
        access_log off;
    }
    
    location = /api/clients/health {
        proxy_pass http://redstring_oauth/health;
        access_log off;
    }
    
    # Static assets with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://redstring_app;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Favicon
    location = /favicon.ico {
        proxy_pass http://redstring_app;
        expires 7d;
        access_log off;
    }
}

# Optional: Admin interface (internal network only)
server {
    listen 8080;
    server_name 127.0.0.1;
    
    # OAuth admin endpoints
    location /admin/clients {
        proxy_pass http://redstring_oauth/api/clients;
        
        # Basic auth (configure as needed)
        # auth_basic "Admin Area";
        # auth_basic_user_file /etc/nginx/.htpasswd;
    }
}